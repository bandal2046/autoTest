*** Settings ***
Library           Selenium2Library
Library           Screenshot
Library           AutoItLibrary
Resource          小程序/keys.txt
Library           AppiumLibrary    run_on_failure=AppiumLibrary.Capture Page Screenshot
Resource          小程序/publicModule.txt

*** Test Cases ***
登录小程序
    #打开小程序
    open application    http://localhost:4723/wd/hub    platformName=Android    platformVersion=4.4.2    deviceName=127.0.0.1:62001    appPackage=com.tencent.mm    appActivity=.ui.LauncherUI
    Comment    open application    http://localhost:4723/wd/hub    platformName=Android    platformVersion=4.4.2    deviceName=040ACG7L6DJL    appPackage=com.tencent.mm
    ...    appActivity=.ui.LauncherUI
    sleep    15
    Comment    AppiumLibrary.click element    id=com.tencent.mm:id/hf    #进入发现
    AppiumLibrary.click element    xpath=//*[@text='发现']
    sleep    2
    AppiumLibrary.click element    xpath=//*[@text='小程序']    #进入小程序
    sleep    1
    AppiumLibrary.click element    xpath=//android.widget.TextView[@text=\"${小程序}\"]    #进入目标小程序（到keys内配置访问目标小程序）
    sleep    15

单规格-包邮订单
    [Documentation]    1、小程序购买单规格指定商品
    ...    2、获取商品详情页商品价格
    ...    3、提交订单
    ...    4、获取提交订单页商品价格及最终支付价格（支付使用余额）
    ...    5、商城后台获取订单支付金额
    ...    6、对比小程和商城后台获取的支付金额
    ...    7、后台发货
    ...    8、小程序端收货，检查订单状态
    ...    9、后台检查订单状态
    #打开小程序-下订单
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"搜索\"]    #进入小程序商品列表
    sleep    1
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"${单规格商品}\"]    #选择第一个商品
    sleep    1
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"立即购买\"]    #立即购买
    sleep    2
    ${商品详情页商品价格}    AppiumLibrary.get text    xpath=//android.view.View/android.view.View[13]
    log    ${商品详情页商品价格}
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"立即购买\"]    #再次立即购买
    sleep    1
    AppiumLibrary.click element    xpath=//android.view.View/android.view.View[12]    #选择余额支付
    sleep    1
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"余额支付\"]    #余额立即支付
    sleep    1
    #打开浏览器-发货
    登录后台
    后台发货
    sleep    3
    #切换到小程序-确认收货
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"待收货\"]    #进入小程序待收货
    sleep    3
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"确认收货\"]    #小程序点击确认收货
    sleep    3
    AppiumLibrary.click element    id=com.tencent.mm:id/all    #小程序点击是，确认收货
    sleep    3
    #切换到浏览器-测试
    Selenium2Library.click link    link=会员

test
    [Documentation]    1、小程序购买单规格指定商品
    ...    2、获取商品详情页商品价格
    ...    3、提交订单
    ...    4、获取提交订单页商品价格及最终支付价格（支付使用余额）
    ...    5、商城后台获取订单支付金额
    ...    6、对比小程和商城后台获取的支付金额
    ...    7、后台发货
    ...    8、小程序端收货，检查订单状态
    ...    9、后台检查订单状态
    #打开小程序-下订单
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"搜索\"]    #进入小程序商品列表
    sleep    2
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"${单规格商品}\"]    #选择第一个商品
    sleep    2
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"立即购买\"]    #立即购买
    sleep    2
    ${商品详情页价格A}    AppiumLibrary.get element attribute    xpath=//android.view.View/android.view.View[13]    name    #获取商品详情页商品价格
    ${商品详情页价格}    Should Match Regexp    ${商品详情页价格A}    \\d+    #正则去除￥
    log    ${商品详情页价格A}
    log    ${商品详情页价格}
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"加入购物车\"]    #再次立即购买
    sleep    3
    #判断是否有收货地址
    ${a}    Run Keyword And Return Status    Page Should Contain    小程序测试收货地址
    run keyword if    ${a} == ${True}    添加收货地址
    ...    ELSE    log    已经有添加收货地址，不用再新建
    AppiumLibrary.click element    xpath=//android.view.View/android.view.View[12]    #选择余额支付
    sleep    2
    ${运费方式}    AppiumLibrary.get element attribute    xpath=//android.view.View/android.view.View[8]/android.view.View[2]    name    #获取订单提交页运费模版
    should contain    ${运费方式}    免运费    #验证运费模版为免运费
    ${运费}    AppiumLibrary.get element attribute    xpath=//android.view.View/android.view.View[15]/android.view.View[2]    name    #获取订单提交页实际运费
    should contain    ${运费}    +￥0.00    #验证实际运费
    ${实际支付金额}    AppiumLibrary.get element attribute    xpath=//android.view.View/android.view.View[18]    name    #获取订单提交页实际支付金额
    should contain    ${实际支付金额}    ${商品详情页价格A}    #验证实际支付金额是否与商品价格一致
    AppiumLibrary.click element    xpath=//android.view.View[@content-desc=\"余额支付\"]    #余额立即支付
    sleep    2
